{
  "variables": {
    "subscription_id": "{{env `ARM_SUBSCRIPTION_ID`}}",
    "tenant_id": "{{env `ARM_TENANT_ID`}}",
    "client_id": "{{env `ARM_CLIENT_ID`}}",
    "client_secret": "{{env `ARM_CLIENT_SECRET`}}",
    "resource_group_name": "rjackson-rg",
    "storage_account": "rjacksonstorage",
    "vault_version": "1.3.1",
    "terraform_version": "0.12.20",
    "setup_vault_addr": "https://cam-vault.hashidemos.io:8200",
    "setup_vault_token": ""
  },
  "builders": [{
    "type": "azure-arm",
    "managed_image_name": "rjackson-test-images",
    "capture_name_prefix": "packer",

    "client_id": "{{ user `client_id` }}",
    "client_secret": "{{ user `client_secret` }}",
    "object_id": "{{ user `object_id` }}",
    "subscription_id": "{{ user `subscription_id` }}",
    "tenant_id": "{{ user `tenant_id` }}",
    "storage_account": "{{ user `storage_account` }}",
    "resource_group_name": "{{ user `resource_group_name` }}",
    "managed_image_resource_group_name": "{{ user `resource_group_name` }}",

    "os_type": "Windows",
    "image_publisher": "MicrosoftWindowsServer",
    "image_offer": "WindowsServer",
    "image_sku": "2016-Datacenter-Server-Core",

    "communicator": "winrm",
    "winrm_use_ssl": "true",
    "winrm_insecure": "true",
    "winrm_timeout": "3m",
    "winrm_username": "packer",

    "location": "{{ user `location` }}",
    "vm_size": "Standard_DS1_V2"
  }],
  "provisioners": [
    {
      "type": "file",
      "source": "RDP-Tcp-443.reg",
      "destination": "C:\\Users\\Public\\RDP-Tcp-443.reg"
    },
    {
      "type": "powershell",
        "script": "setup_workstation.ps1"
    },
    {
    "type": "powershell",
      "inline": [
        " # NOTE: the following *3* lines are only needed if the you have installed the Guest Agent.",
        "  while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "  while ((Get-Service WindowsAzureTelemetryService).Status -ne 'Running') { Start-Sleep -s 5 }",
        "  while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",

        "if( Test-Path $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml ){ rm $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml -Force}",
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
    ]
  }]
}
